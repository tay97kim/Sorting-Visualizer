[{"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\index.js":"1","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\reportWebVitals.js":"2","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\App.js":"3","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\component\\Header.js":"4","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\component\\header.style.js":"5","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\Main.js":"6","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\Footer.js":"7"},{"size":157,"mtime":1611063067154,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":9804,"mtime":1613011724610,"results":"11","hashOfConfig":"9"},{"size":5000,"mtime":1612885727764,"results":"12","hashOfConfig":"9"},{"size":1908,"mtime":1611737539613,"results":"13","hashOfConfig":"9"},{"size":1672,"mtime":1613008452585,"results":"14","hashOfConfig":"9"},{"size":980,"mtime":1612490839714,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4xmf65",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\index.js",[],["33","34"],"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\reportWebVitals.js",[],"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\App.js",["35"],"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\component\\Header.js",["36"],"import React from \"react\";\r\n\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport { Button, SortButton, Container, Wrapper, ControlWrapper, SpeedWrapper, SpeedContainer, SortWrapper, CountContainer } from \"./header.style\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nvar valueBtn = false;\r\nvar valueSpeed = 3;\r\nvar valueCP = 0;\r\nvar valueSW = 0;\r\nvar valueMC = 0;\r\nvar sortState = true;\r\n\r\nexport function valueClear() {\r\n    valueCP = 0;\r\n    valueSW = 0;\r\n    valueMC = 0;\r\n}\r\n\r\nexport function plusValue(int) {\r\n    switch (int) {\r\n        case 1: {\r\n            valueCP++;\r\n            break;\r\n        }\r\n        case 2: {\r\n            valueSW++;\r\n            break;\r\n        }\r\n        case 3: {\r\n            valueMC++;\r\n            break;\r\n        }\r\n        default: {\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSpeed() {\r\n    return valueSpeed;\r\n}\r\n\r\nexport function buttonOn() {\r\n    valueBtn = false;\r\n}\r\n\r\nexport default function Header({ sortPause, sortRestart, setArray, updateList, rangeChange, selectClicked, bubbleClicked, insertClicked, mergeClicked, sortStart }) {\r\n    const [valueS, setValueS] = React.useState(3);\r\n\r\n    const sleep = (milliseconds) => { //딜레이 메소드\r\n        return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n    };\r\n\r\n    const handleSliderChangeSpeed = (event, newValue) => {\r\n        setValueS(newValue);\r\n        setSpeed(valueS);\r\n    };\r\n\r\n    function setSpeed(inputSpeed) {\r\n        valueSpeed = inputSpeed;\r\n    }\r\n\r\n    function buttonOff() {\r\n        if (valueBtn === false) {\r\n            valueBtn = true;\r\n            onSorting();\r\n            sortStart();\r\n        }\r\n    }\r\n\r\n    function setArrayBtn() {\r\n        if (valueBtn === false)\r\n            setArray();\r\n    }\r\n\r\n    function updateListBtn() {\r\n        if (valueBtn === false)\r\n            updateList();\r\n    }\r\n\r\n    function rangeChangeBtn() {\r\n        if (valueBtn === false)\r\n            rangeChange();\r\n    }\r\n\r\n    function select() {\r\n        if (valueBtn === false)\r\n            selectClicked();\r\n    }\r\n\r\n    function bubble() {\r\n        if (valueBtn === false)\r\n            bubbleClicked();\r\n    }\r\n\r\n    function insert() {\r\n        if (valueBtn === false)\r\n            insertClicked();\r\n    }\r\n\r\n    function merge() {\r\n        if (valueBtn === false)\r\n            mergeClicked();\r\n    }\r\n\r\n    function pause() {\r\n        if (valueBtn === true) {\r\n            sortPause();\r\n        }\r\n    }\r\n\r\n    const onSorting = async () => {\r\n        var top = document.getElementById(\"top\");\r\n        var control = document.getElementById(\"control\");\r\n        top.style.backgroundColor = \"lightgray\";\r\n        control.style.backgroundColor = \"gray\";\r\n        while (valueBtn) {//on Sorting\r\n            await sleep(100);\r\n        }\r\n        top.style.backgroundColor = \"#77E000\";\r\n        control.style.backgroundColor = \"#1CD90B\";\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            < Wrapper id=\"top\" >\r\n                <Button onClick={setArrayBtn}>직접배열생성</Button>\r\n                <Button onClick={updateListBtn}>새 배열생성</Button>\r\n                <Button onClick={rangeChangeBtn}>원소개수설정</Button>\r\n\r\n                <SpeedContainer>\r\n                    <SpeedWrapper>\r\n                        <Typography id=\"discrete-slider-alwaysS\" gutterBottom>\r\n                            {valueS}\r\n                        </Typography>\r\n                        <Slider\r\n                            value={typeof valueS === 'number' ? valueS : 0}\r\n                            onChange={handleSliderChangeSpeed}\r\n                            aria-labelledby=\"discrete-slider-alwaysS\"\r\n                            min={1}\r\n                            max={5}\r\n                        />\r\n                    </SpeedWrapper>\r\n                    <p >속도설정</p>\r\n                </SpeedContainer>\r\n\r\n                <SortWrapper>\r\n                    <SortButton onClick={select}>선택정렬</SortButton>\r\n                    <SortButton onClick={bubble}>버블정렬</SortButton>\r\n                    <SortButton onClick={insert}>삽입정렬</SortButton>\r\n                    <SortButton onClick={merge}>병합정렬</SortButton>\r\n                </SortWrapper>\r\n            </ Wrapper >\r\n            <ControlWrapper id=\"control\">\r\n                <Button onClick={buttonOff}>정렬 시작</Button>\r\n                <Button onClick={pause}>일시정지</Button>\r\n                <CountContainer>\r\n                    비교횟수:\r\n                    <Typography>{valueCP}</Typography>\r\n                </CountContainer>\r\n                <CountContainer>\r\n                    교환횟수:\r\n                    <Typography>{valueSW}</Typography>\r\n                </CountContainer>\r\n                <CountContainer>\r\n                    병합횟수:\r\n                    <Typography>{valueMC}</Typography>\r\n                </CountContainer>\r\n            </ControlWrapper>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\component\\header.style.js",[],"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\Main.js",[],"C:\\Users\\samua\\git\\Sort Project\\sorting-visualizer\\src\\pages\\Footer.js",["37"],"import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport default function Main() {\r\n    return (\r\n        <Footer>\r\n            <FooterContent>\r\n                <Name>Sort Visualizer</Name>\r\n            </FooterContent>\r\n            <FooterContent>Made by TaeSeong Kim for 모두를 위한 컴퓨팅 사고</FooterContent>\r\n            <FooterContent>\r\n                <img src=\"header_logo.jpg\" width=\"295\" height=\"56\" />\r\n            </FooterContent>\r\n        </Footer >\r\n    )\r\n}\r\n\r\nconst Footer = styled.footer`\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    height: 300px;\r\n    background-color: #71B309;\r\n    justify-content: center;\r\n`\r\n\r\nconst FooterContent = styled.div`\r\n    display: flex;\r\n    background-color: #71B309;\r\n    width: 100%;\r\n    align-content: center;\r\n    justify-content: space-evenly;\r\n    padding-top:10px;\r\n`\r\n\r\nconst Name = styled.div`\r\n    font-size: 40px;\r\n    color: white;\r\n    padding-right: 80px;\r\n`",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":252,"column":13,"nodeType":"44","messageId":"45","endLine":252,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":13,"column":5,"nodeType":"44","messageId":"48","endLine":13,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":12,"column":17,"nodeType":"51","endLine":12,"endColumn":70},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-redeclare","'comp' is already defined.","Identifier","redeclared","no-unused-vars","'sortState' is assigned a value but never used.","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]